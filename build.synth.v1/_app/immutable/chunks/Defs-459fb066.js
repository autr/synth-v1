const Y="array",f="boolean",i="number",t="string",y="buffer",m="vec2",_="vec4",I="object",E="Color",A="Slider",O="Knob",U="Waveform",T="Selector",v="Joystick",S="Numbox",w="Button",k="Icon",R="Toggle",L="Textbox",D={AUI_COLOR:E,AUI_SLIDER:A,AUI_KNOB:O,AUI_WAVE:U,AUI_SELECTOR:T,AUI_JOYSTICK:v,AUI_NUMBOX:S,AUI_ICON:k,AUI_TOGGLE:R,AUI_TEXTBOX:L},B="Range",N="Axis",e=(n,o)=>({type:n,...o}),s=(n,o)=>({width:e(m,{default:null,editor:n,description:"default width for this element"}),height:e(m,{default:null,editor:o,description:"default height for this element"})}),C=n=>({name:e(t,{default:n,description:'descriptive name for the ui element, ie. "opacity"'}),id:e(t,{default:n.toLowerCase(),description:"unique id must be set automatically via sync, or user defined"}),url:e(t,{default:n.toLowerCase(),description:"recursive url format id for automatic sync"}),tabindex:e(i,{default:0,description:"important for accesibility"}),style:e(t,{default:""}),class:e(t,{default:""})}),a=(n,o)=>e(I,{properties:{...C(n),...o}}),M=n=>e(t,{default:n[0],oneOf:n}),x={position:e(t,{default:-1,oneOf:[-1,0,1]})},l={smoothing:e(i,{default:.2,min:0,max:1})},H={handle_width:{type:"number",default:.5,min:0,max:2,description:"width of the handle"},handle_height:{type:"number",default:.5,min:0,max:2,description:"height of the handle"},handle_rounded:{description:"rounded sides of ticks",type:["array","number"],items:{type:"number"},default:[1,1,1,1],maxItems:4}},b={tick_divisions:{type:"number",default:3,step:1,min:-1,max:30,description:"number of visual ticks"},tick_width:{type:"number",default:.2,min:0,max:1,description:"width of the ticks"},tick_height:{type:"number",default:.2,min:0,max:1,description:"height of the ticks"},tick_offset:{type:"number",default:0,min:-10,max:10,step:.2,description:"height of the ticks"},tick_rounded:{description:"rounded sides of ticks",type:["array","number"],items:{type:"number"},default:[1,1,1,1],maxItems:4}},g={min:e(i,{default:0}),max:e(i,{default:1})},p={resolution:e(i,{default:!1})},h={min:e(t,{default:[0,0],items:{type:"number"},minItems:2,maxItems:2}),max:e(t,{default:[1,1],items:{type:"number"},minItems:2,maxItems:2})};C("");const j={[y]:a(y,{value:e(y,{default:[]}),items:{type:["number","array"]},formats:{[U]:{}}}),[f]:a(f,{value:e(f,{default:!1}),formats:{[w]:{...s("200px","2em"),icon:{type:"number",step:1,default:null},position:{type:"number",default:0,min:0,max:3}},[R]:{...s("50px","2em"),safety_drag:{type:"boolean",default:!1,description:"simulate a smartphone unlock slider"},ui_rounded:{type:"number",default:1,description:"roundedness of toggle"},ui_outline:{type:"string",default:null},handle_padding:{type:"number",default:.1,min:0,max:1},handle_outline:{type:"number",default:.1,min:0,max:1,description:"outline of toggle"}}}}),[_]:a(_,{value:e(Y,{default:[0,0,0,0],items:{type:"number"},minItems:4,maxItems:4}),formats:{[E]:{colorspace:e(t,{oneOf:["RGB","RGBA","CMYK","HSL","HSLA","HSV","HSVA"]})}}}),[i]:a(i,{value:e(i,{default:.5}),formats:{[k]:{value:e(i,{default:0,min:0,step:1}),...s("80px","80px"),ui_rounded:{type:["array","number"],items:{type:"number"},default:[1,1,1,1],maxItems:4,description:"roundedness of content box"},ui_outline:{type:"string",default:null},ui_padding:{type:"number",default:.1,min:0,max:1,description:"padding as percentage of shortest side"},icon_thickness:{type:"number",default:1,min:0,max:1,description:"thickness of icon shapes"},icon_roundness:{type:"number",default:1,min:0,max:1,description:"roundness of icon shapes"},icon_rotate:{type:"number",default:0,min:0,max:360,step:1,description:"rotate static icon position in 350deg"},spin_amount:{type:"number",default:0,min:-1,max:1,step:.1,description:"spin icon on Z axis"},spin_finish:{type:"boolean",default:1,description:"return to original position if spinning"},pulse_amount:{type:"number",default:0,min:-1,max:1,step:.1,description:"pulse icon on Z axis"},pulse_speed:{type:"number",default:0,min:0,max:1,step:.1,description:"rate of pulsing"},pulse_opacity:{type:"number",default:0,min:0,max:1,step:.1,description:"change opacity with pulse"},color_invert:{type:"boolean",default:!1,description:"invert the icon"},color_blend:{type:"number",default:0,min:0,max:2,step:1,description:"blend with multiply of overlay opacity"}},[A]:{...s("200px","2em"),...x,...g,...p,...l,vertical:{type:"boolean",default:!1,description:"rotate slider 90 degrees"},...b},[O]:{...s("200px","200px"),...x,...g,...p,...l,ui_range:{type:"number",default:270,description:"set the rotational size of the knob",min:30,max:360},ui_padding:{type:"number",default:0,items:{type:"number"},min:0,max:1},ui_outline:{type:"string",default:null},ui_rounded:{type:"boolean",default:!0},ui_thickness:{type:"number",default:.2,min:0,max:1,description:"thickness of the line"},track_outline:{type:"string",default:null},...H,handle_offset:{type:"number",default:0,min:-1,max:1,description:"height of the handle"},handle_outline:{type:"string",default:null},...b},[S]:{...s("200px","2em"),min:{type:"number",default:null},max:{type:"number",default:null},step:{type:"number",default:null,min:0,max:null,description:"step of numbox"},sensitivity:{type:"number",default:.5,description:"sensitivity to dragging motion",min:0,max:1},instant:{type:"boolean",default:!1,description:"update value instantly on input"}},[T]:{value:e(i,{default:0,min:0,step:1}),...s("200px","2em"),options:e("array",{default:["A B C D E","B C D E F","C D E F G"],items:{type:[t,I,i]}})}}}),[m]:a(m,{rotate:e(i,{default:0}),value:e("array",{default:[0,0],items:{type:"number"},minItems:2,maxItems:2}),formats:{[B]:{...h,...p,...l},[N]:{...h,...p,...l},[v]:{...s("200px","200px"),...h,...l,spring:{type:"boolean",default:!1,description:"return to middle position on release"},ui_outline:{type:"string",default:null},handle_size:{type:"number",default:.2,min:0,max:1,description:"size of the handle"},handle_rounded:{type:"number",default:1,description:"radius of handle"},...b}}}),[t]:a(t,{value:e(t,{default:""}),formats:{[L]:{...s("200px","200px"),rows:{type:"number",default:1,min:1,max:null,step:1,description:"auto-switches to textarea if > 1"},instant:{type:"boolean",default:!1,description:"update value instantly on input"}}}})},G=(n=>{let o={};for(const[P,d]of Object.entries(j)){let r={type:d.type,properties:{}};for(const[u,c]of Object.entries(d.properties))u!="formats"&&u!="format"&&(r.properties[u]=c);o[P]={type:r.type,properties:{...r.properties,format:M(Object.keys(d.properties.formats))}};for(const[u,c]of Object.entries(d.properties.formats))o[u]={type:r.type,properties:{...r.properties,...c}}}return o})();export{D as A,G as S};
